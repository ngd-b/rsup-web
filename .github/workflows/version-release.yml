name: Version Release

on:
  push:
    paths:
      - "package.json" # 当 package.json 变更时触发
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20" # 根据需要调整 Node.js 版本
          cache: "npm"

      - name: Get current version from package.json
        id: get_version
        run: |
          VERSION=$(jq -r '.version' < package.json)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Zip the dist directory
        run: |
          zip -r rsup-web.zip dist
        # 这里压缩生成的文件为 my-project-v{version}.zip

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: "latest" # 使用 package.json 中的版本号作为 tag
          release_name: "Release v${{ env.VERSION }}"
          body: |
            ## What's Changed
            See the latest changes in version ${{ env.VERSION }}.
          draft: false # 如果希望手动发布，可以将其设为 true
          prerelease: false # 如果是预发布版本，设置为 true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./my-project-v${{ env.VERSION }}.zip # 这里是生成的压缩包路径
          asset_name: my-project-v${{ env.VERSION }}.zip # 上传到 GitHub Release 的文件名
          asset_content_type: application/zip
